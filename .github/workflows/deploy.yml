name: Tests and deploy
# echo "$DOCKER_CONTAINER_NAME_FULL" > debug.txt && scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r -i $HOME/.ssh/key debug.txt $SERVER_SSH_USER@$SERVER_ADDRES:/home/$SERVER_SSH_USER/dockers/iso
# https://stackoverflow.com/questions/68317233/if-or-condition-in-github-actions
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

env:
  SERVER_SSH_USER: ${{ secrets.SERVER_SSH_USER }}
  SERVER_SSH_PRIV_KEY: ${{ secrets.SERVER_SSH_PRIV_KEY }}
  SERVER_ADDRES: ${{ secrets.SERVER_ADDRES }}
  SERVER_ADDRES_IP: ${{ secrets.SERVER_ADDRES_IP }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  DOCKER_CONTAINER_NAME: ${{ secrets.DOCKER_CONTAINER_NAME }}

jobs:
#  tests:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: test
#      run: |
#        SCRIPT=.github/workflows/init-ssh.sh
#        echo aaa
#        ls -la
#        echo bbb
#        chmod +x $SCRIPT
#        echo ccc
#        ls -la $SCRIPT
#        echo ddd
#        sh $SCRIPT "$SERVER_SSH_PRIV_KEY" "$SERVER_ADDRES"

  build_and_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v1
      with:
        python-version: 3.10.4

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint flake8
      uses: py-actions/flake8@v2
      with:
        max-line-length: "120"
        path: "src"

    - name: Test with pytest
      run: |
        python -m unittest discover tests/

  deploy:
    needs: build_and_tests
#    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Docker build & push
      run: |
        GIT_BRANCH=$(git branch --show-current)
        GIT_HASH=$(git log -1 --pretty=format:%h)
        export DOCKER_CONTAINER_NAME_FULL="${DOCKER_USER}/${DOCKER_CONTAINER_NAME}-${GIT_BRANCH}:${GIT_HASH}"
#        echo $(echo "$DOCKER_CONTAINER_NAME_FULL" | base64)
        echo "$DOCKER_CONTAINER_NAME_FULL" > debug.txt && scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r -i $HOME/.ssh/key debug.txt $SERVER_SSH_USER@$SERVER_ADDRES:/home/$SERVER_SSH_USER/dockers/iso; rm -f debug.txt; 
        
        docker login -u $DOCKER_USER -p $DOCKER_PASS
        docker-compose build --pull
        docker-compose push

    - name: Start on serv
      run: |
        GIT_BRANCH=$(git branch --show-current)
        GIT_HASH=$(git log -1 --pretty=format:%h)
        export DOCKER_CONTAINER_NAME_FULL="${DOCKER_USER}/${DOCKER_CONTAINER_NAME}-${GIT_BRANCH}:${GIT_HASH}"
        
        SCRIPT=.github/workflows/init-ssh.sh
        chmod +x $SCRIPT
        sh $SCRIPT
        ssh_init "$SSH_PRIVATE_KEY_DEV" "$DEV_SERVER_IP"
        
        docker-compose -H "ssh://$SERVER_SSH_USER@$SERVER_ADDRES" pull
        docker-compose -H "ssh://$SERVER_SSH_USER@$SERVER_ADDRES" up -d

    - name: Run script on serv
      run: |
        SCRIPT=.github/workflows/init-ssh.sh
        chmod +x $SCRIPT
        sh $SCRIPT
        ssh_init "$SSH_PRIVATE_KEY_DEV" "$DEV_SERVER_IP"
        
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SERVER_SSH_USER@$SERVER_ADDRES \
        "ls -la; "\
        "echo \"remote ssh works great\""
        
        scp -r readme.md $SERVER_SSH_USER@$SERVER_ADDRES:/home/$SERVER_SSH_USER/

    - name: Finishing
      run: |
        rm -f "$HOME/.ssh/key"
        rm -f debug.txt